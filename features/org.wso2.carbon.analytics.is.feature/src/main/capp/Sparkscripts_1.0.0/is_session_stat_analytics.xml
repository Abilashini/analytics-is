<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Analytics>
    <Name>is_session_stat_analytics</Name>
    <Script>
        CREATE TEMPORARY TABLE rawSessionData USING CarbonAnalytics OPTIONS (tableName "SESSION-ANALYTICS-STREAM",schema "sessionId STRING, action INT, userName STRING, tenantDomain STRING,_timestamp LONG" );

        CREATE TEMPORARY TABLE isRawSessionAnalytics USING CarbonAnalytics OPTIONS (tableName "Is-Session-Info", schema "sessionId STRING -i, startTime LONG -i, endTime LONG -i, isActive INT -i, duration INT -i, userName FACET -i, tenantDomain STRING -i, _timestamp LONG", primaryKeys "sessionId", mergeSchema "false");

        CREATE TEMPORARY TABLE isSessionAnalyticsPerMinute USING CarbonAnalytics OPTIONS (tableName "Is-Session-Stat-per-Minute", schema "bucketId STRING -i, bucketStart LONG -i, bucketEnd LONG -i, activeSessionCount INT -i, newSessionCount INT -i, terminatedSessionCount INT -i, _timestamp LONG", primaryKeys "bucketId, bucketStart, bucketEnd", incrementalParams "isSessionAnalyticsPerMinute, 60", mergeSchema "false");

        CREATE TEMPORARY TABLE isSessionAnalyticsPerHour USING CarbonAnalytics OPTIONS (tableName "Is-Session-Stat-per-Hour", schema "bucketId STRING -i, bucketStart LONG -i, bucketEnd LONG -i, activeSessionCount INT -i, newSessionCount INT -i, terminatedSessionCount INT -i, _timestamp LONG", primaryKeys "bucketId, bucketStart, bucketEnd", incrementalParams "isSessionAnalyticsPerHour, 3600", mergeSchema "false");

        CREATE TEMPORARY TABLE isSessionAnalyticsTimelyAggregate USING CarbonAnalytics OPTIONS (tableName "Is-Session-Stat-Aggregate", schema "bucketStart LONG -i, bucketEnd LONG -i, userName FACET -i, longestSession INT -i, averageSession INT -i, _timestamp LONG", primaryKeys "bucketStart, bucketEnd, userName", incrementalParams "isSessionAnalyticsTimelyAggregate, 3600", mergeSchema "false");

        INSERT INTO TABLE isRawSessionAnalytics SELECT A.sessionId, A._timestamp AS startTime, B._timestamp AS endTime, (CASE WHEN B._timestamp is NULL then 1 ELSE 0 END) AS isActive, (CASE WHEN B._timestamp is NULL then (1434512856340 - A._timestamp) ELSE (B._timestamp - A._timestamp) END ) AS duration, A.userName, A.tenantDomain, (CASE WHEN B._timestamp is NULL then cast(A._timestamp as BIGINT) ELSE cast(B._timestamp as BIGINT) END) AS _timestamp from (Select sessionId, action, userName, tenantDomain, _timestamp from rawSessionData where action = 1) A LEFT OUTER JOIN (Select sessionId, action, userName, tenantDomain, _timestamp from rawSessionData where action = 0) B on A.sessionId = B.sessionId;
    </Script>
    <CronExpression>0 0 3 * * ?</CronExpression>
</Analytics>
