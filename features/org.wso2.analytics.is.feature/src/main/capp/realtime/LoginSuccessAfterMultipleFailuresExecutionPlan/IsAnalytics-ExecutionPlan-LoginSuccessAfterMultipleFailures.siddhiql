/* Enter a unique ExecutionPlan */
@Plan:name('IsAnalytics-ExecutionPlan-LoginSuccessAfterMultipleFailures')

/* Enter a unique description for ExecutionPlan */
-- @Plan:description('ExecutionPlan')

/* define streams/tables and write queries here ... */
@Import('org.wso2.is.analytics.stream.OverallAuthentication:1.0.0')
define stream AuthStream (meta_tenantId int, contextId string, eventId string, eventType string, authenticationSuccess bool, username string, localUsername string, userStoreDomain string, tenantDomain string, remoteIp string, region string, inboundAuthType string, serviceProvider string, rememberMeEnabled bool, forceAuthEnabled bool, passiveAuthEnabled bool, rolesCommaSeparated string, authenticationStep string, identityProvider string, authStepSuccess bool, stepAuthenticator string, isFirstLogin bool, identityProviderType string, _timestamp long);

@Export('org.wso2.is.analytics.stream.LoginSuccessAfterMultipleFailures:1.0.0')
define stream LoginAlertStream (username string, severity int, msg string, tenantDomain string, _timestamp long);

/* Query for detecting login attempts with same username*/
from every(e1=AuthStream) -> e2=AuthStream[authStepSuccess == false AND e1.username == e2.username AND e1.userStoreDomain == e2.userStoreDomain AND e1.tenantDomain == e2.tenantDomain]<5:> ->  e3=AuthStream[authStepSuccess == true AND e2.username == e3.username AND e2.userStoreDomain == e3.userStoreDomain AND e2.tenantDomain == e3.tenantDomain]
within 1 min
select e2[last].username, 1 as severity, str:concat('Successful login attempt after multiple login failures detected at: ', time:dateFormat(e3[last]._timestamp,'yyyy-MM-dd HH:mm:ss'), '.') as msg, e2[last].tenantDomain, e3[last]._timestamp
output first every 1 min
insert into LoginAlertStream;

/* Query for detecting login attempts with different usernames but with same contextId*/
from every(e1=AuthStream) -> e2=AuthStream[authStepSuccess == false AND e1.contextId == e2.contextId]<5:> ->  e3=AuthStream[authStepSuccess == true AND e2.contextId == e3.contextId]
within 1 min
select e2[last].username, 1 as severity, str:concat('Successful login attempt after multiple login failures detected at: ', time:dateFormat(e3[last]._timestamp,'yyyy-MM-dd HH:mm:ss'), '.') as msg, e2[last].tenantDomain, e3[last]._timestamp
output first every 1 min
insert into LoginAlertStream;

/* Query for detecting login attempts with different usernames but with same IP*/
from every(e1=AuthStream) -> e2=AuthStream[authStepSuccess == false AND e1.remoteIp == e2.remoteIp]<5:> ->  e3=AuthStream[authStepSuccess == true AND e2.remoteIp == e3.remoteIp]
within 1 min
select e2[last].username, 1 as severity, str:concat('Successful login attempt after multiple login failures detected at: ', time:dateFormat(e3[last]._timestamp,'yyyy-MM-dd HH:mm:ss'), '.') as msg, e2[last].tenantDomain, e3[last]._timestamp
output first every 1 min
insert into LoginAlertStream;